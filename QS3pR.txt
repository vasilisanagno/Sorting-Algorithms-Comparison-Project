function partition(array,left,right,lp,mp)
	i=left+2,j=left+2,n=right-1,k=right-1,rp
	p=array[left],q=array[left+1],r=array[right]
	
	if left==right-1
		if array[left]>array[right]
			swap array[left] array[right]
		mp=left
		rp=left
		lp=left
		
		return rp
	while j<=n do
		while array[j]<q&&j<=n do
			if array[j]<p
				if i!=j
					swap array[i] array[j]
				i++
			j++
		while array[n]>q&&j<=n do
			if array[n]>r
				if n!=k
					swap array[n] array[k]
				k--
			n--
		if j<=n
			if array[j]<r
				if array[n]<p
					if i!=j
						swap array[i] array[j]
					if i!=n
						swap array[i] array[n]
					i++
				else 
					if n!=j
						swap array[n] array[j]
				if n!=k
					swap array[n] array[k]
				j++
				n--
				k--
			else
				if array[n]<p
					if i!=j
						swap array[i] array[j]
					if i!=n
						swap array[i] array[n]
					i++
				else
					if j!=n
						swap array[j] array[n]
				j++
				n--
	i--
	j--
	n++
	k++
	if i!=left+1
		swap array[left+1] array[i]
	if i!=j
		swap array[i] array[j]
	i--
	if i!=left
		swap array[left] array[i]
	if k!=right
		swap array[right] array[k]
	rp=k
	lp=i
	mp=j
	
	return rp

function QS3pR(array,left,right)
	if left<right 
		lp,rp,mp,min,mid,max,min1,mid1,max1
		random1=left + rand%(right-left+1)
		random2=left + rand%(right-left+1)
		while random1==random2 || random2>right do
			random2=left + rand%(right-left+1)
		random3=left + rand%(right-left+1)
		while random1==random3 || random2==random3 || random3>right do
			random3=left + rand%(right-left+1)
		if left<right+1
			pick_positions(array,random1,random2,random3,min,mid,max) //put in min the smallest value, in mid the median value and in max the biggest value
			if min>left+1&&min<right&&mid>left+1&&mid<right&&max>left+1&&max<right
				swap array[left] array[min]
				swap array[right] array[max]
				swap array[left+1] array[mid]
			else
				if (min==left||min==left+1||min==right)&&(mid==left||mid==left+1||mid==right)&&(max==left||max==left+1||max==right)
					min1=array[min]
					mid1=array[mid]
					max1=array[max]
					
					array[left]=min1
					array[left+1]=mid1
					array[right]=max1
				else
					if min==left||min==left+1||min==right
						if mid==left||mid==left+1||mid==right
							if min==left
								if mid==right
									swap array[mid] array[left+1]
							else
								if min==left+1
									if mid==right
										swap array[mid] array[left+1]
										swap array[mid] arra[left]
									else
										swap array[min] array[mid]
								else
									if mid==left+1
										swap array[min] array[left]
									else
										swap array[mid] array[left+1]
										swap array[min] array[left]
							swap array[max] array[right]
						else
							if max==left||max==left+1||max==right
								if min==left
									if max==left+1 
										swap array[max] array[right]
								else 
									if min==left+1
										if max==left
											swap array[max] array[right]
										swap array[min] array[left]
									else 
										if max==left+1
											swap array[max] array[left]
										swap array[min] array[left]
								swap array[mid] array[left+1]
							else 
								if min!=left
									swap array[min] array[left]
								swap array[max] array[right]
								swap array[mid] array[left+1]
					else 
						if mid==left||mid==left+1||mid==right 
							if max==left||max==left+1||max==right
								if mid==left
									if max==left+1
										swap array[max] array[right]
									swap array[mid] array[left+1]
								else 
									if mid==left+1 
										if max==left 
											swap array[max] array[right]
									else 
										if max==left
											swap array[max] array[left+1]
										swap array[mid] array[left+1]
								swap array[min] array[left]
							else 
								swap array[mid] array[left+1]
								swap array[min] array[left]
								swap array[max] array[right]
						else 
							if max!=right
								swap array[max] array[right]
							swap array[mid] array[left+1]
							swap array[min] array[left]
							
		rp = partition(array,left,right,lp,mp)
		QS3pR(array,left,lp-1)
		QS3pR(array,lp+1,mp-1)
		QS3pR(array,mp+1,rp-1)
		QS3pR(array,rp+1,right)

